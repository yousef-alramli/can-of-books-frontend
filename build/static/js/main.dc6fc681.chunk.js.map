{"version":3,"sources":["Header.js","Footer.js","BestBooks.js","App.js","index.js"],"names":["Header","Navbar","collapseOnSelect","expand","bg","variant","Brand","NavItem","to","className","React","Component","Footer","BestBooks","props","componentDidMount","axios","get","process","then","res","setState","books","data","state","console","log","this","length","map","item","Card","style","width","Body","Title","title","Subtitle","status","Text","description","Link","href","email","Alert","App","loginHandler","user","logoutHandler","onLogout","exact","path","ReactDOM","render","document","getElementById"],"mappings":"6OAkBeA,E,4JAZb,WACE,OACE,eAACC,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAKC,GAAG,OAAOC,QAAQ,OAAvD,UACE,cAACJ,EAAA,EAAOK,MAAR,gCACA,cAACC,EAAA,EAAD,UAAS,cAAC,IAAD,CAAMC,GAAG,IAAIC,UAAU,WAAvB,2B,GALIC,IAAMC,WCQZC,E,4JATb,WACE,OACE,cAACX,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAKC,GAAG,OAAOC,QAAQ,OAAvD,SACE,cAACJ,EAAA,EAAOK,MAAR,iC,GAJaI,IAAMC,W,iCCsDZE,E,kDAlDb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAKRC,kBAAoB,WAClBC,IAAMC,IAAN,iBAAoBC,iBAApB,WAA+DC,MAAK,SAAAC,GAClE,EAAKC,SAAS,CACZC,MAAOF,EAAIG,KAAKD,YAPpB,EAAKE,MAAQ,CACXF,MAAO,IAHQ,E,0CAgBnB,WAGE,OACEG,QAAQC,IAAIC,KAAKH,MAAMF,OAEvB,qCACE,kFAE6B,IAA5BK,KAAKH,MAAMF,MAAMM,OAChBD,KAAKH,MAAMF,MAAMO,KAAI,SAAAC,GACnB,OAAO,mCACL,cAACC,EAAA,EAAD,CAAMC,MAAO,CAAEC,MAAO,SAAtB,SACE,eAACF,EAAA,EAAKG,KAAN,WACE,cAACH,EAAA,EAAKI,MAAN,UAAaL,EAAKM,QAClB,cAACL,EAAA,EAAKM,SAAN,CAAe5B,UAAU,kBAAzB,SAA4CqB,EAAKQ,SACjD,cAACP,EAAA,EAAKQ,KAAN,UACGT,EAAKU,cAER,cAACT,EAAA,EAAKU,KAAN,CAAWC,KAAK,IAAhB,SAAqBZ,EAAKa,kBAMlC,cAACC,EAAA,EAAD,CAAOvC,QAAQ,SAAf,sC,GA1CcK,IAAMC,W,eC6CfkC,E,kDAtCb,WAAY/B,GAAQ,IAAD,8BACjB,cAAMA,IAMRgC,aAAe,SAACC,GACd,EAAK1B,SAAS,CACZ0B,UATe,EAanBC,cAAgB,WACd,EAAK3B,SAAS,CACZ0B,KAAM,QAbR,EAAKvB,MAAQ,CACXuB,KAAM,MAHS,E,0CAmBnB,WACE,OACE,mCACE,eAAC,IAAD,WACE,cAAC,EAAD,CAAQA,KAAMpB,KAAKH,MAAMuB,KAAME,SAAUtB,KAAKqB,gBAC9C,cAAC,IAAD,UACE,cAAC,IAAD,CAAOE,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,QAKJ,cAAC,EAAD,a,GAjCQzC,IAAMC,WCPxByC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.dc6fc681.chunk.js","sourcesContent":["import React from 'react';\nimport { Navbar, NavItem } from 'react-bootstrap';\nimport { Link } from \"react-router-dom\";\nimport './Header.css';\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand>My Favorite Books</Navbar.Brand>\n        <NavItem><Link to=\"/\" className=\"nav-link\">Home</Link></NavItem>\n        {/* TODO: if the user is logged in, render a navigation link to profile page */}\n        {/* TODO: if the user is logged in, render the `LogoutButton` */}\n      </Navbar>\n    )\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand>Code Fellows</Navbar.Brand>\n      </Navbar>\n    )\n  }\n}\n\nexport default Footer;\n","import React from 'react';\nimport axios from 'axios';\nimport {\n  Card,\n  Alert\n} from 'react-bootstrap';\nclass BestBooks extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      books: []\n    }\n  }\n  componentDidMount = () => {\n    axios.get(`http://${process.env.REACT_APP_BACKEND_URL}/books`).then(res => {\n      this.setState({\n        books: res.data.books\n      })\n    })\n\n  }\n  /* TODO: Make a GET request to your API to fetch books for the logged in user  */\n\n  render() {\n    /* TODO: render user's books in a Carousel */\n\n    return (\n      console.log(this.state.books),\n\n      <>\n        <h2>My Essential Lifelong Learning &amp; Formation Shelf</h2>\n\n        {this.state.books.length !== 0 ? (\n          this.state.books.map(item => {\n            return <>\n              <Card style={{ width: '18rem' }}>\n                <Card.Body>\n                  <Card.Title>{item.title}</Card.Title>\n                  <Card.Subtitle className=\"mb-2 text-muted\">{item.status}</Card.Subtitle>\n                  <Card.Text>\n                    {item.description}\n                  </Card.Text>\n                  <Card.Link href=\"#\">{item.email}</Card.Link>\n                </Card.Body>\n              </Card>\n            </>\n          })\n        ) : (\n          <Alert variant='danger'>\n            There's no books.\n          </Alert>\n        )}\n      </>\n    )\n  }\n}\n\nexport default BestBooks;\n","import React from 'react';\nimport Header from './Header';\nimport Footer from './Footer';\nimport BestBooks from './BestBooks';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null,\n    }\n  }\n\n  loginHandler = (user) => {\n    this.setState({\n      user,\n    })\n  }\n\n  logoutHandler = () => {\n    this.setState({\n      user: null,\n    })\n  }\n\n  render() {\n    return (\n      <>\n        <Router>\n          <Header user={this.state.user} onLogout={this.logoutHandler} />\n          <Switch>\n            <Route exact path=\"/\">\n              <BestBooks/>\n              {/* TODO: if the user is logged in, render the `BestBooks` component, if they are not, render the `Login` component */}\n            </Route>\n            {/* TODO: add a route with a path of '/profile' that renders a `Profile` component */}\n          </Switch>\n          <Footer />\n        </Router>\n      </>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js';\n\nReactDOM.render(\n  <App />,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}